import React, { useEffect, useState } from 'react'
import { Loader, Card, FormField } from '../components'

const RenderCards = ({data, title}) => {
  if(data?.length > 0){
    return data.map((post) => 
    <Card key={post._id}{...post}
    />)
  }
  return <h2 className='mt-5 font-bold text-[#6469ff] text-x1-uppercase'>{title}</h2>
}


const home = () => {
  const [loading, setloading] = useState(false)
  const [allPosts, setallPosts] = useState(null)
  const [searchText, setsearchText] = useState('')
  const [searchResult, setsearchResult] = useState(null)
  const [searchTimeOut, setsearchTimeOut] = useState(null)

  useEffect(() => {
    const fetchPosts = async () => {
      try {
        setloading(true)
        const response = await fetch(
          'http://localhost:5000/api/v1/post',
          {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json'
            }
          }
        )
        if(response.ok){
          const result = await response.json()
          setallPosts(result.data.reverse())
        }
      } catch (error) {
        alert(error)
      } finally{
        setloading(false)
      }
    }
    return fetchPosts;
  }, [])

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeOut)
    setsearchText(e.target.value)

    setsearchTimeOut(
      setTimeout(() => {
        const result = allPosts.filter((post) => post.name.toLowerCase().includes(searchText.toLowerCase()) || post.prompt.toLowerCase().includes(searchText.toLowerCase()))
        setsearchResult(result)
      }, 500))
  }
  
  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>
          Community Showcase
        </h1>
        <p className='mt-2 text-[#666e75] max-w[500px]'>
          Browse through a collection of imaginative and visually stunning logos generated by MidTrek AI
        </p>
      </div>
      
      <div className='mt-16'>
        <FormField
          labelName="Search Posts"
          name="text"
          type="text"
          placeholder="Search Post"
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className='mt-10'>
        {
          loading ? 
            <div className='flex justify-center items-center'>
              <Loader />
            </div>
          : 
            <>
              <div className='grid lg:grid-cols-4 sm:grid-cols-3  xs:grid-cols-2 col-gap-3'>
                {
                  searchText ? (
                    <RenderCards
                      data={searchResult}
                      title='No Search Result'
                    />
                  )
                  : (
                    <RenderCards
                      data={allPosts}
                      title='No Posts Found'
                    />
                  )
                }
              </div>
            </>
        }
      </div>
    </section>
  )
}

export default home;